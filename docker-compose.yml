services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    networks:
      - app-network
  artemis-1:
    build:
      context: ./artemis
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=text,quiz
      - ARTEMIS_INSTANCE_NAME=artemis-1
      - EUREKA_INSTANCE_IP_ADDRESS=host.docker.internal # VM-IP in distributed setup
      - EUREKA_INSTANCE_NON_SECURE_PORT=8083 # Host-Port on VM, required for distributed setup
    ports:
        - "8083:8081"
    networks:
      - app-network
  artemis-2:
    build:
      context: ./artemis
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=quiz
      - ARTEMIS_INSTANCE_NAME=artemis-2
    networks:
      - app-network
  artemis-3:
    build:
      context: ./artemis
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=quiz,assessment,athena,atlas,buildagent,core,exam,exercise,feedback,lecture,programming,quiz,solution,student,team,version-control
      - ARTEMIS_INSTANCE_NAME=artemis-3
    networks:
      - app-network
  artemis-4:
    build:
      context: ./artemis
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=quiz,assessment,athena,atlas,buildagent,core,exam,exercise,feedback,lecture,programming,quiz,solution,student,team,version-control
      - ARTEMIS_INSTANCE_NAME=artemis-4
    networks:
      - app-network
  artemis-5:
    build:
      context: ./artemis
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=quiz,assessment,athena,atlas,buildagent,core,exam,exercise,feedback,lecture,programming,quiz,solution,student,team,version-control
      - ARTEMIS_INSTANCE_NAME=artemis-5
    networks:
      - app-network
  artemis-6:
    build:
      context: ./artemis
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=text,quiz
      - ARTEMIS_INSTANCE_NAME=artemis-6
    networks:
      - app-network
  artemis-7:
    build:
      context: ./artemis
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=quiz
      - ARTEMIS_INSTANCE_NAME=artemis-7
    networks:
      - app-network
  artemis-8:
    build:
      context: ./artemis
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=quiz,assessment,athena,atlas,buildagent,core,exam,exercise,feedback,lecture,programming,quiz,solution,student,team,version-control
      - ARTEMIS_INSTANCE_NAME=artemis-8
    networks:
      - app-network
  artemis-9:
    build:
      context: ./artemis
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=quiz,assessment,athena,atlas,buildagent,core,exam,exercise,feedback,lecture,programming,quiz,solution,student,team,version-control
      - ARTEMIS_INSTANCE_NAME=artemis-9
    networks:
      - app-network
  artemis-10:
    build:
      context: ./artemis
      dockerfile: Dockerfile
    environment:
      - SPRING_PROFILES_ACTIVE=quiz,assessment,athena,atlas,buildagent,core,exam,exercise,feedback,lecture,programming,quiz,solution,student,team,version-control
      - ARTEMIS_INSTANCE_NAME=artemis-10
    networks:
      - app-network
  jhipster-registry:
    image: jhipster/jhipster-registry
    container_name: jhipster-registry
    ports:
      - "8761:8761"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
